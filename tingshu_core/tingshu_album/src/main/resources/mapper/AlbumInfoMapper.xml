<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shousi.mapper.AlbumInfoMapper">

    <resultMap id="BaseResultMap" type="com.shousi.entity.AlbumInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="albumTitle" column="album_title" jdbcType="VARCHAR"/>
            <result property="category3Id" column="category3_id" jdbcType="BIGINT"/>
            <result property="albumIntro" column="album_intro" jdbcType="VARCHAR"/>
            <result property="coverUrl" column="cover_url" jdbcType="VARCHAR"/>
            <result property="includeTrackCount" column="include_track_count" jdbcType="INTEGER"/>
            <result property="isFinished" column="is_finished" jdbcType="CHAR"/>
            <result property="estimatedTrackCount" column="estimated_track_count" jdbcType="INTEGER"/>
            <result property="albumRichIntro" column="album_rich_intro" jdbcType="VARCHAR"/>
            <result property="qualityScore" column="quality_score" jdbcType="DECIMAL"/>
            <result property="payType" column="pay_type" jdbcType="CHAR"/>
            <result property="priceType" column="price_type" jdbcType="CHAR"/>
            <result property="price" column="price" jdbcType="DECIMAL"/>
            <result property="discount" column="discount" jdbcType="DECIMAL"/>
            <result property="vipDiscount" column="vip_discount" jdbcType="DECIMAL"/>
            <result property="tracksForFree" column="tracks_for_free" jdbcType="INTEGER"/>
            <result property="secondsForFree" column="seconds_for_free" jdbcType="INTEGER"/>
            <result property="buyNotes" column="buy_notes" jdbcType="VARCHAR"/>
            <result property="sellingPoint" column="selling_point" jdbcType="VARCHAR"/>
            <result property="isOpen" column="is_open" jdbcType="CHAR"/>
            <result property="status" column="status" jdbcType="CHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,album_title,
        category3_id,album_intro,cover_url,
        include_track_count,is_finished,estimated_track_count,
        album_rich_intro,quality_score,pay_type,
        price_type,price,discount,
        vip_discount,tracks_for_free,seconds_for_free,
        buy_notes,selling_point,is_open,
        status,create_time,update_time,
        is_deleted
    </sql>

    <select id="getUserAlbumByPage" resultType="com.shousi.vo.AlbumTempVo">
        select
        c.albumId,
        c.albumTitle,
        c.coverUrl,
        c.includeTrackCount,
        c.status,
        c.createTime,
        MAX(IF(c.statType = '0401', c.statNum, 0)) as playStatNum,
        MAX(IF(c.statType = '0402', c.statNum, 0)) as subscribeStatNum,
        MAX(IF(c.statType = '0403', c.statNum, 0)) as buyStatNum,
        MAX(IF(c.statType = '0404', c.statNum, 0)) as commentStatNum
        from (
        select
        a.id as albumId,
        a.album_title as albumTitle,
        a.cover_url as coverUrl,
        a.include_track_count as includeTrackCount,
        a.status,
        a.create_time as createTime,
        b.stat_type as statType,
        b.stat_num as statNum
        from album_info a
        left join album_stat b on b.album_id = a.id
        <where>
            <if test="albumInfoQuery.userId != null">
                and a.user_id = #{albumInfoQuery.userId}
            </if>
            <if test="albumInfoQuery.albumTitle != null and albumInfoQuery.albumTitle != ''">
                and a.album_title like CONCAT('%',#{albumInfoQuery.albumTitle},'%')
            </if>
            <if test="albumInfoQuery.status != null and albumInfoQuery.status != ''">
                and a.status = #{albumInfoQuery.status}
            </if>
            and a.is_deleted = 0
        </where>
        ) c
        group by c.albumId
        order by c.createTime desc
    </select>
</mapper>
